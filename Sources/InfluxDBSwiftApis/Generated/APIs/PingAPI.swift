//
// PingAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
import InfluxDBSwift

extension InfluxDB2API {


public class PingAPI {
    private let influxDB2API: InfluxDB2API

    public init(influxDB2API: InfluxDB2API) {
        self.influxDB2API = influxDB2API
    }

    /**
     Checks the status of InfluxDB instance and version of InfluxDB.
     
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    public func getPing(apiResponseQueue: DispatchQueue? = nil, completion: @escaping (_ data: Void?,_ error: InfluxDBClient.InfluxDBError?) -> Void) {
        getPingWithRequestBuilder().execute(apiResponseQueue ?? self.influxDB2API.apiResponseQueue) { result -> Void in
            switch result {
            case .success:
                completion((), nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Checks the status of InfluxDB instance and version of InfluxDB.
     - GET /ping
     - BASIC:
       - type: http
       - name: BasicAuth
     - API Key:
       - type: apiKey u&#x3D;&amp;p&#x3D; (QUERY)
       - name: QuerystringAuth
     - BASIC:
       - type: http
       - name: TokenAuth
     - responseHeaders: [X-Influxdb-Build(String), X-Influxdb-Version(Int)]
     - returns: RequestBuilder<Void> 
     */
    internal func getPingWithRequestBuilder() -> RequestBuilder<Void> {
        let path = "/ping"
        let URLString = influxDB2API.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<Void> = influxDB2API.requestBuilderFactory.getRequestNonDecodableBuilder(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false, headers: [:], influxDB2API: influxDB2API)

        return requestBuilder
    }

    /**
     Checks the status of InfluxDB instance and version of InfluxDB.
     
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    public func headPing(apiResponseQueue: DispatchQueue? = nil, completion: @escaping (_ data: Void?,_ error: InfluxDBClient.InfluxDBError?) -> Void) {
        headPingWithRequestBuilder().execute(apiResponseQueue ?? self.influxDB2API.apiResponseQueue) { result -> Void in
            switch result {
            case .success:
                completion((), nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Checks the status of InfluxDB instance and version of InfluxDB.
     - HEAD /ping
     - BASIC:
       - type: http
       - name: BasicAuth
     - API Key:
       - type: apiKey u&#x3D;&amp;p&#x3D; (QUERY)
       - name: QuerystringAuth
     - BASIC:
       - type: http
       - name: TokenAuth
     - responseHeaders: [X-Influxdb-Build(String), X-Influxdb-Version(Int)]
     - returns: RequestBuilder<Void> 
     */
    internal func headPingWithRequestBuilder() -> RequestBuilder<Void> {
        let path = "/ping"
        let URLString = influxDB2API.basePath + path
        let parameters: [String:Any]? = nil
        
        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<Void> = influxDB2API.requestBuilderFactory.getRequestNonDecodableBuilder(method: "HEAD", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false, headers: [:], influxDB2API: influxDB2API)

        return requestBuilder
    }

}
}
